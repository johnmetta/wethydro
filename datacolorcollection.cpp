// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "datacolorcollection.h"

// Dispatch interfaces referenced by this interface
#include "datacolor.h"


/////////////////////////////////////////////////////////////////////////////
// CDataColorCollection properties

LPDISPATCH CDataColorCollection::GetParent()
{
	LPDISPATCH result;
	GetProperty(0x1, VT_DISPATCH, (void*)&result);
	return result;
}

long CDataColorCollection::GetCount()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

/////////////////////////////////////////////////////////////////////////////
// CDataColorCollection operations

void CDataColorCollection::Remove(const VARIANT& Row, const VARIANT& Column)
{
	static BYTE parms[] =
		VTS_VARIANT VTS_VARIANT;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &Row, &Column);
}

CDataColor CDataColorCollection::Add(const VARIANT& Row, const VARIANT& Column, unsigned long Color)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_VARIANT VTS_VARIANT VTS_I4;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		&Row, &Column, Color);
	return CDataColor(pDispatch);
}

CDataColor CDataColorCollection::GetItem(const VARIANT& Row, const VARIANT& Column)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_VARIANT VTS_VARIANT;
	InvokeHelper(0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, parms,
		&Row, &Column);
	return CDataColor(pDispatch);
}

void CDataColorCollection::RemoveAll()
{
	InvokeHelper(0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
