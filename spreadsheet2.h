#pragma once

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CSpreadsheet2 wrapper class

class CSpreadsheet2 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CSpreadsheet2)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x2E551, 0x0, 0x0, { 0xC0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName, LPCTSTR lpszWindowName, DWORD dwStyle,
						const RECT& rect, CWnd* pParentWnd, UINT nID, 
						CCreateContext* pContext = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); 
	}

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle, const RECT& rect, CWnd* pParentWnd, 
				UINT nID, CFile* pPersist = NULL, BOOL bStorage = FALSE,
				BSTR bstrLicKey = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); 
	}

// Attributes
public:
enum
{
    chPattern5Percent = 1,
    chPattern10Percent = 2,
    chPattern20Percent = 3,
    chPattern25Percent = 4,
    chPattern30Percent = 5,
    chPattern40Percent = 6,
    chPattern50Percent = 7,
    chPattern60Percent = 8,
    chPattern70Percent = 9,
    chPattern75Percent = 10,
    chPattern80Percent = 11,
    chPattern90Percent = 12,
    chPatternDarkHorizontal = 13,
    chPatternDarkVertical = 14,
    chPatternDarkDownwardDiagonal = 15,
    chPatternDarkUpwardDiagonal = 16,
    chPatternSmallCheckerBoard = 17,
    chPatternTrellis = 18,
    chPatternLightHorizontal = 19,
    chPatternLightVertical = 20,
    chPatternLightDownwardDiagonal = 21,
    chPatternLightUpwardDiagonal = 22,
    chPatternSmallGrid = 23,
    chPatternDottedDiamond = 24,
    chPatternWideDownwardDiagonal = 25,
    chPatternWideUpwardDiagonal = 26,
    chPatternDashedUpwardDiagonal = 27,
    chPatternDashedDownwardDiagonal = 28,
    chPatternNarrowVertical = 29,
    chPatternNarrowHorizontal = 30,
    chPatternDashedVertical = 31,
    chPatternDashedHorizontal = 32,
    chPatternLargeConfetti = 33,
    chPatternLargeGrid = 34,
    chPatternHorizontalBrick = 35,
    chPatternLargeCheckerBoard = 36,
    chPatternSmallConfetti = 37,
    chPatternZigZag = 38,
    chPatternSolidDiamond = 39,
    chPatternDiagonalBrick = 40,
    chPatternOutlinedDiamond = 41,
    chPatternPlaid = 42,
    chPatternSphere = 43,
    chPatternWeave = 44,
    chPatternDottedGrid = 45,
    chPatternDivot = 46,
    chPatternShingle = 47,
    chPatternWave = 48
}ChartPatternTypeEnum;
enum
{
    chFillSolid = 1,
    chFillPatterned = 2,
    chFillGradientOneColor = 3,
    chFillGradientTwoColors = 4,
    chFillGradientPresetColors = 5,
    chFillTexturePreset = 6,
    chFillTextureUserDefined = 7
}ChartFillTypeEnum;
enum
{
    chGradientEarlySunset = 1,
    chGradientLateSunset = 2,
    chGradientNightfall = 3,
    chGradientDaybreak = 4,
    chGradientHorizon = 5,
    chGradientDesert = 6,
    chGradientOcean = 7,
    chGradientCalmWater = 8,
    chGradientFire = 9,
    chGradientFog = 10,
    chGradientMoss = 11,
    chGradientPeacock = 12,
    chGradientWheat = 13,
    chGradientParchment = 14,
    chGradientMahogany = 15,
    chGradientRainbow = 16,
    chGradientRainbowII = 17,
    chGradientGold = 18,
    chGradientGoldII = 19,
    chGradientBrass = 20,
    chGradientChrome = 21,
    chGradientChromeII = 22,
    chGradientSilver = 23,
    chGradientSapphire = 24
}ChartPresetGradientTypeEnum;
enum
{
    chGradientHorizontal = 1,
    chGradientVertical = 2,
    chGradientDiagonalUp = 3,
    chGradientDiagonalDown = 4,
    chGradientFromCorner = 5,
    chGradientFromCenter = 7
}ChartGradientStyleEnum;
enum
{
    chGradientVariantStart = 1,
    chGradientVariantEnd = 2,
    chGradientVariantCenter = 3,
    chGradientVariantEdges = 4
}ChartGradientVariantEnum;
enum
{
    chTexturePapyrus = 1,
    chTextureCanvas = 2,
    chTextureDenim = 3,
    chTextureWovenMat = 4,
    chTextureWaterDroplets = 5,
    chTexturePaperBag = 6,
    chTextureFishFossil = 7,
    chTextureSand = 8,
    chTextureGreenMarble = 9,
    chTextureWhiteMarble = 10,
    chTextureBrownMarble = 11,
    chTextureGranite = 12,
    chTextureNewsprint = 13,
    chTextureRecycledPaper = 14,
    chTextureParchment = 15,
    chTextureStationery = 16,
    chTextureBlueTissuePaper = 17,
    chTexturePinkTissuePaper = 18,
    chTexturePurpleMesh = 19,
    chTextureBouquet = 20,
    chTextureCork = 21,
    chTextureWalnut = 22,
    chTextureOak = 23,
    chTextureMediumWood = 24
}ChartPresetTextureEnum;
enum
{
    chStack = 1,
    chStackScale = 2,
    chStretch = 3,
    chTile = 4,
    chStretchPlot = 5
}ChartTextureFormatEnum;
enum
{
    chAllFaces = 7,
    chEnd = 2,
    chEndSides = 6,
    chFront = 1,
    chFrontEnd = 3,
    chFrontSides = 5,
    chSides = 4,
    chProjectFront = 8
}ChartTexturePlacementEnum;
enum
{
    chLineDash = 0,
    chLineDashDot = 1,
    chLineDashDotDot = 2,
    chLineLongDash = 4,
    chLineLongDashDot = 5,
    chLineRoundDot = 6,
    chLineSolid = 7,
    chLineSquareDot = 8
}ChartLineDashStyleEnum;
enum
{
    owcLineWeightHairline = 0,
    owcLineWeightThin = 1,
    owcLineWeightMedium = 2,
    owcLineWeightThick = 3
}LineWeightEnum;
enum
{
    owcUnderlineStyleNone = 0,
    owcUnderlineStyleSingle = 1,
    owcUnderlineStyleDouble = 2,
    owcUnderlineStyleSingleAccounting = 3,
    owcUnderlineStyleDoubleAccounting = 4
}UnderlineStyleEnum;
enum
{
    chLineMiterBevel = 0,
    chLineMiterMiter = 1,
    chLineMiterRound = 2
}ChartLineMiterEnum;
enum
{
    chDrawModePaint = 1,
    chDrawModeSelection = 2,
    chDrawModeHitTest = 3,
    chDrawModeScale = 4
}ChartDrawModesEnum;
enum
{
    chChartLayoutAutomatic = 0,
    chChartLayoutHorizontal = 1,
    chChartLayoutVertical = 2
}ChartChartLayoutEnum;
enum
{
    chScaleOrientationMinMax = 0,
    chScaleOrientationMaxMin = 1
}ChartScaleOrientationEnum;
enum
{
    chScaleTypeLinear = 0,
    chScaleTypeLogarithmic = 1
}ChartScaleTypeEnum;
enum
{
    chAxisCrossesAutomatic = 0,
    chAxisCrossesCustom = 3
}ChartAxisCrossesEnum;
enum
{
    chSelectionNone = -1,
    chSelectionAxis = 0,
    chSelectionChart = 1,
    chSelectionPlotArea = 2,
    chSelectionDataLabels = 3,
    chSelectionErrorbars = 4,
    chSelectionGridlines = 5,
    chSelectionLegend = 6,
    chSelectionLegendEntry = 7,
    chSelectionPoint = 8,
    chSelectionSeries = 9,
    chSelectionTitle = 10,
    chSelectionTrendline = 11,
    chSelectionChartSpace = 12,
    chSelectionSurface = 13,
    chSelectionField = 14,
    chSelectionUserDefined = -2,
    chSelectionCategoryLabel = 16,
    chSelectionDropZone = 17,
    chSelectionDataLabel = 18
}ChartSelectionsEnum;
enum
{
    chTickMarkAutomatic = 0,
    chTickMarkNone = 1,
    chTickMarkInside = 2,
    chTickMarkOutside = 3,
    chTickMarkCross = 4
}ChartTickMarkEnum;
enum
{
    chAxisPositionTop = -1,
    chAxisPositionBottom = -2,
    chAxisPositionLeft = -3,
    chAxisPositionRight = -4,
    chAxisPositionRadial = -5,
    chAxisPositionCircular = -6,
    chAxisPositionCategory = -7,
    chAxisPositionTimescale = -7,
    chAxisPositionValue = -8,
    chAxisPositionSeries = -9,
    chAxisPositionPrimary = -10,
    chAxisPositionSecondary = -11
}ChartAxisPositionEnum;
enum
{
    chTitlePositionAutomatic = 0,
    chTitlePositionTop = 1,
    chTitlePositionBottom = 2,
    chTitlePositionLeft = 3,
    chTitlePositionRight = 4
}ChartTitlePositionEnum;
enum
{
    chCategoryAxis = 0,
    chValueAxis = 1,
    chTimescaleAxis = 2,
    chSeriesAxis = 3
}ChartAxisTypeEnum;
enum
{
    chAxisGroupingNone = 0,
    chAxisGroupingAuto = 1,
    chAxisGroupingManual = 2
}ChartAxisGroupingEnum;
enum
{
    chAxisUnitDay = 0,
    chAxisUnitWeek = 1,
    chAxisUnitMonth = 2,
    chAxisUnitQuarter = 3,
    chAxisUnitYear = 4
}ChartAxisUnitTypeEnum;
enum
{
    chFunctionSum = 1,
    chFunctionCount = 2,
    chFunctionMin = 3,
    chFunctionMax = 4,
    chFunctionAvg = 5,
    chFunctionDefault = 6
}ChartGroupingTotalFunctionEnum;
enum
{
    plHAlignAutomatic = 0,
    plHAlignLeft = 1,
    plHAlignCenter = 2,
    plHAlignRight = 3
}PivotHAlignmentEnum;
enum
{
    plGroupOnEachValue = 0,
    plGroupOnPrefixChars = 1,
    plGroupOnYears = 2,
    plGroupOnQtrs = 3,
    plGroupOnMonths = 4,
    plGroupOnWeeks = 5,
    plGroupOnDays = 6,
    plGroupOnHours = 7,
    plGroupOnMinutes = 8,
    plGroupOnSeconds = 9,
    plGroupOnInterval = 10
}PivotFieldGroupOnEnum;
enum
{
    plSortDirectionDefault = 0,
    plSortDirectionAscending = 1,
    plSortDirectionDescending = 2,
    plSortDirectionCustom = 4,
    plSortDirectionCustomAscending = 5,
    plSortDirectionCustomDescending = 6
}PivotFieldSortDirectionEnum;
enum
{
    plTypeRegular = 1,
    plTypeCalculated = 2,
    plTypeTimeYears = 4,
    plTypeTimeHalfYears = 5,
    plTypeTimeQuarters = 6,
    plTypeTimeMonths = 7,
    plTypeTimeWeeks = 8,
    plTypeTimeDays = 9,
    plTypeTimeHours = 10,
    plTypeTimeMinutes = 11,
    plTypeTimeSeconds = 12,
    plTypeTimeUndefined = 13,
    plTypeUnknown = 14,
    plTypeUserDefined = 15,
    plTypeTimeWeekdays = 16,
    plTypeCustomGroup = 17
}PivotFieldTypeEnum;
enum
{
    plFilterFunctionNone = 0,
    plFilterFunctionTopCount = 3,
    plFilterFunctionBottomCount = 4,
    plFilterFunctionTopPercent = 5,
    plFilterFunctionBottomPercent = 6,
    plFilterFunctionTopSum = 7,
    plFilterFunctionBottomSum = 8
}PivotFieldFilterFunctionEnum;
enum
{
    plFunctionUnknown = 0,
    plFunctionSum = 1,
    plFunctionCount = 2,
    plFunctionMin = 3,
    plFunctionMax = 4,
    plFunctionAverage = 5,
    plFunctionStdDev = 6,
    plFunctionVar = 7,
    plFunctionStdDevP = 10,
    plFunctionVarP = 11,
    plFunctionCalculated = 127
}PivotTotalFunctionEnum;
enum
{
    plTotalTypeIntrinsic = 1,
    plTotalTypeUserDefined = 2,
    plTotalTypeCalculated = 3
}PivotTotalTypeEnum;
enum
{
    plShowAsNormal = 0,
    plShowAsPercentOfRowTotal = 1,
    plShowAsPercentOfColumnTotal = 2,
    plShowAsPercentOfRowParent = 3,
    plShowAsPercentOfColumnParent = 4,
    plShowAsPercentOfGrandTotal = 5
}PivotShowAsEnum;
enum
{
    plDisplayPropertyNone = 0,
    plDisplayPropertyInReport = 1,
    plDisplayPropertyInScreenTip = 2,
    plDisplayPropertyInAll = 3
}PivotMemberPropertyDisplayEnum;
enum
{
    plFindFormatMember = 0,
    plFindFormatPathName = 1,
    plFindFormatPathInt = 2,
    plFindFormatPathHex = 3
}PivotMemberFindFormatEnum;
enum
{
    plGroupTypeRegular = 1,
    plGroupTypeCustomGroup = 2,
    plGroupTypeFallThrough = 3,
    plGroupTypePlaceHolder = 4,
    plGroupTypeStaticOther = 5,
    plGroupTypeDynamicOther = 6
}PivotMemberCustomGroupTypeEnum;
enum
{
    plOrientationNone = 0,
    plOrientationColumnAxis = 1,
    plOrientationRowAxis = 2,
    plOrientationFilterAxis = 4,
    plOrientationDataAxis = 8,
    plOrientationPageAxis = 16
}PivotFieldSetOrientationEnum;
enum
{
    plFieldSetTypeTime = 1,
    plFieldSetTypeOther = 2,
    plFieldSetTypeUnknown = 3,
    plFieldSetTypeUserDefined = 4
}PivotFieldSetTypeEnum;
enum
{
    plMembersCompareByUniqueName = 0,
    plMembersCompareByName = 1
}PivotMembersCompareByEnum;
enum
{
    plMemberStateClear = 1,
    plMemberStateChecked = 2,
    plMemberStateGray = 3
}PivotFilterUpdateMemberStateEnum;
enum
{
    plAllDefault = 0,
    plAllInclude = 1,
    plAllExclude = 2
}PivotFieldSetAllIncludeExcludeEnum;
enum
{
    plTotalOrientationRow = 1,
    plTotalOrientationColumn = 2
}PivotViewTotalOrientationEnum;
enum
{
    plExpandAutomatic = 0,
    plExpandAlways = 1,
    plExpandNever = 2
}PivotTableExpandEnum;
enum
{
    plExportActionNone = 0,
    plExportActionOpenInExcel = 1
}PivotExportActionEnum;
enum
{
    providerTypeUnknown = 1,
    providerTypeRelational = 2,
    providerTypeMultidimensional = 3
}ProviderType;
enum
{
    plMemberExpandAutomatic = 0,
    plMemberExpandAlways = 1,
    plMemberExpandNever = 2
}PivotTableMemberExpandEnum;
enum
{
    plScrollTypeNone = 0,
    plScrollTypeTop = 1,
    plScrollTypeLeft = 2,
    plScrollTypeBottom = 4,
    plScrollTypeRight = 8,
    plScrollTypeAll = 15
}PivotScrollTypeEnum;
enum
{
    plArrowModeAccept = 0,
    plArrowModeEdit = 1
}PivotArrowModeEnum;
enum
{
    plCaretPositionAtEnd = 0,
    plCaretPositionAtMouse = 1
}PivotCaretPositionEnum;
enum
{
    plEditNone = 0,
    plEditInProgress = 1
}PivotEditModeEnum;
enum
{
    chLegendPositionAutomatic = 0,
    chLegendPositionTop = 1,
    chLegendPositionBottom = 2,
    chLegendPositionLeft = 3,
    chLegendPositionRight = 4
}ChartLegendPositionEnum;
enum
{
    chProjectionModePerspective = 0,
    chProjectionModeOrthographic = 1
}ChartProjectionModeEnum;
enum
{
    chLabelPositionAutomatic = 0,
    chLabelPositionCenter = 1,
    chLabelPositionInsideEnd = 2,
    chLabelPositionInsideBase = 3,
    chLabelPositionOutsideEnd = 4,
    chLabelPositionOutsideBase = 5,
    chLabelPositionLeft = 6,
    chLabelPositionRight = 7,
    chLabelPositionTop = 8,
    chLabelPositionBottom = 9
}ChartDataLabelPositionEnum;
enum
{
    chDimSeriesNames = 0,
    chDimCategories = 1,
    chDimValues = 2,
    chDimYValues = 3,
    chDimXValues = 4,
    chDimOpenValues = 5,
    chDimCloseValues = 6,
    chDimHighValues = 7,
    chDimLowValues = 8,
    chDimBubbleValues = 9,
    chDimRValues = 10,
    chDimThetaValues = 11,
    chDimFilter = 14,
    chDimCharts = 15,
    chDimFormatValues = 16
}ChartDimensionsEnum;
enum
{
    chEndStyleNone = 1,
    chEndStyleCap = 2
}ChartEndStyleEnum;
enum
{
    chErrorBarDirectionY = 0,
    chErrorBarDirectionX = 1
}ChartErrorBarDirectionEnum;
enum
{
    chErrorBarIncludePlusValues = 0,
    chErrorBarIncludeMinusValues = 1,
    chErrorBarIncludeBoth = 2
}ChartErrorBarIncludeEnum;
enum
{
    chErrorBarTypeFixedValue = 0,
    chErrorBarTypePercent = 1,
    chErrorBarTypeCustom = 2
}ChartErrorBarTypeEnum;
enum
{
    chErrorBarPlusValues = 12,
    chErrorBarMinusValues = 13
}ChartErrorBarCustomValuesEnum;
enum
{
    chMarkerStyleNone = 0,
    chMarkerStyleSquare = 1,
    chMarkerStyleDiamond = 2,
    chMarkerStyleTriangle = 3,
    chMarkerStyleX = 4,
    chMarkerStyleStar = 5,
    chMarkerStyleDot = 6,
    chMarkerStyleDash = 7,
    chMarkerStyleCircle = 8,
    chMarkerStylePlus = 9
}ChartMarkerStyleEnum;
enum
{
    chTrendlineTypeExponential = 0,
    chTrendlineTypeLinear = 1,
    chTrendlineTypeLogarithmic = 2,
    chTrendlineTypePolynomial = 3,
    chTrendlineTypePower = 4,
    chTrendlineTypeMovingAverage = 5
}ChartTrendlineTypeEnum;
enum
{
    chChartTypeCombo3D = -2,
    chChartTypeCombo = -1,
    chChartTypeColumnClustered = 0,
    chChartTypeColumnStacked = 1,
    chChartTypeColumnStacked100 = 2,
    chChartTypeBarClustered = 3,
    chChartTypeBarStacked = 4,
    chChartTypeBarStacked100 = 5,
    chChartTypeLine = 6,
    chChartTypeLineStacked = 8,
    chChartTypeLineStacked100 = 10,
    chChartTypeLineMarkers = 7,
    chChartTypeLineStackedMarkers = 9,
    chChartTypeLineStacked100Markers = 11,
    chChartTypeSmoothLine = 12,
    chChartTypeSmoothLineStacked = 14,
    chChartTypeSmoothLineStacked100 = 16,
    chChartTypeSmoothLineMarkers = 13,
    chChartTypeSmoothLineStackedMarkers = 15,
    chChartTypeSmoothLineStacked100Markers = 17,
    chChartTypePie = 18,
    chChartTypePieExploded = 19,
    chChartTypePieStacked = 20,
    chChartTypeScatterMarkers = 21,
    chChartTypeScatterLine = 25,
    chChartTypeScatterLineMarkers = 24,
    chChartTypeScatterLineFilled = 26,
    chChartTypeScatterSmoothLine = 23,
    chChartTypeScatterSmoothLineMarkers = 22,
    chChartTypeBubble = 27,
    chChartTypeBubbleLine = 28,
    chChartTypeArea = 29,
    chChartTypeAreaStacked = 30,
    chChartTypeAreaStacked100 = 31,
    chChartTypeDoughnut = 32,
    chChartTypeDoughnutExploded = 33,
    chChartTypeRadarLine = 34,
    chChartTypeRadarLineMarkers = 35,
    chChartTypeRadarLineFilled = 36,
    chChartTypeRadarSmoothLine = 37,
    chChartTypeRadarSmoothLineMarkers = 38,
    chChartTypeStockHLC = 39,
    chChartTypeStockOHLC = 40,
    chChartTypePolarMarkers = 41,
    chChartTypePolarLine = 42,
    chChartTypePolarLineMarkers = 43,
    chChartTypePolarSmoothLine = 44,
    chChartTypePolarSmoothLineMarkers = 45,
    chChartTypeColumn3D = 46,
    chChartTypeColumnClustered3D = 47,
    chChartTypeColumnStacked3D = 48,
    chChartTypeColumnStacked1003D = 49,
    chChartTypeBar3D = 50,
    chChartTypeBarClustered3D = 51,
    chChartTypeBarStacked3D = 52,
    chChartTypeBarStacked1003D = 53,
    chChartTypeLine3D = 54,
    chChartTypeLineOverlapped3D = 55,
    chChartTypeLineStacked3D = 56,
    chChartTypeLineStacked1003D = 57,
    chChartTypePie3D = 58,
    chChartTypePieExploded3D = 59,
    chChartTypeArea3D = 60,
    chChartTypeAreaOverlapped3D = 61,
    chChartTypeAreaStacked3D = 62,
    chChartTypeAreaStacked1003D = 63
}ChartChartTypeEnum;
enum
{
    chBoundaryValuePercent = 0,
    chBoundaryValueAbsolute = 1
}ChartBoundaryValueTypeEnum;
enum
{
    chSizeIsWidth = 0,
    chSizeIsArea = 1
}ChartSizeRepresentsEnum;
enum
{
    chDataSourceTypeUnknown = 0,
    chDataSourceTypeSpreadsheet = 1,
    chDataSourceTypePivotTable = 3,
    chDataSourceTypeQuery = 4,
    chDataSourceTypeDSC = 5
}ChartDataSourceTypeEnum;
enum
{
    chSelectionMarksNone = 0,
    chSelectionMarksAll = 1,
    chSelectionMarksPivot = 2
}ChartSelectionMarksEnum;
enum
{
    chPlotAggregatesNone = 0,
    chPlotAggregatesSeries = 1,
    chPlotAggregatesCategories = 2,
    chPlotAggregatesCharts = 3,
    chPlotAggregatesFromTotalOrientation = 4
}ChartPlotAggregatesEnum;
enum
{
    chDropZoneFilter = 0,
    chDropZoneSeries = 1,
    chDropZoneCategories = 2,
    chDropZoneData = 3,
    chDropZoneCharts = 4
}ChartDropZonesEnum;
enum
{
    msoLanguageIDInstall = 1,
    msoLanguageIDUI = 2,
    msoLanguageIDHelp = 3,
    msoLanguageIDExeMode = 4,
    msoLanguageIDUIPrevious = 5
}MsoAppLanguageID;
enum
{
    msoLanguageIDMixed = -2,
    msoLanguageIDNone = 0,
    msoLanguageIDNoProofing = 1024,
    msoLanguageIDAfrikaans = 1078,
    msoLanguageIDAlbanian = 1052,
    msoLanguageIDArabicAlgeria = 5121,
    msoLanguageIDArabicBahrain = 15361,
    msoLanguageIDArabicEgypt = 3073,
    msoLanguageIDArabicIraq = 2049,
    msoLanguageIDArabicJordan = 11265,
    msoLanguageIDArabicKuwait = 13313,
    msoLanguageIDArabicLebanon = 12289,
    msoLanguageIDArabicLibya = 4097,
    msoLanguageIDArabicMorocco = 6145,
    msoLanguageIDArabicOman = 8193,
    msoLanguageIDArabicQatar = 16385,
    msoLanguageIDArabic = 1025,
    msoLanguageIDArabicSyria = 10241,
    msoLanguageIDArabicTunisia = 7169,
    msoLanguageIDArabicUAE = 14337,
    msoLanguageIDArabicYemen = 9217,
    msoLanguageIDArmenian = 1067,
    msoLanguageIDAssamese = 1101,
    msoLanguageIDAzeriCyrillic = 2092,
    msoLanguageIDAzeriLatin = 1068,
    msoLanguageIDBasque = 1069,
    msoLanguageIDByelorussian = 1059,
    msoLanguageIDBengali = 1093,
    msoLanguageIDBulgarian = 1026,
    msoLanguageIDBurmese = 1109,
    msoLanguageIDCatalan = 1027,
    msoLanguageIDChineseHongKong = 3076,
    msoLanguageIDChineseMacao = 5124,
    msoLanguageIDSimplifiedChinese = 2052,
    msoLanguageIDChineseSingapore = 4100,
    msoLanguageIDTraditionalChinese = 1028,
    msoLanguageIDCroatian = 1050,
    msoLanguageIDCzech = 1029,
    msoLanguageIDDanish = 1030,
    msoLanguageIDBelgianDutch = 2067,
    msoLanguageIDDutch = 1043,
    msoLanguageIDEnglishAUS = 3081,
    msoLanguageIDEnglishBelize = 10249,
    msoLanguageIDEnglishCanadian = 4105,
    msoLanguageIDEnglishCaribbean = 9225,
    msoLanguageIDEnglishIreland = 6153,
    msoLanguageIDEnglishJamaica = 8201,
    msoLanguageIDEnglishNewZealand = 5129,
    msoLanguageIDEnglishPhilippines = 13321,
    msoLanguageIDEnglishSouthAfrica = 7177,
    msoLanguageIDEnglishTrinidad = 11273,
    msoLanguageIDEnglishUK = 2057,
    msoLanguageIDEnglishUS = 1033,
    msoLanguageIDEnglishZimbabwe = 12297,
    msoLanguageIDEstonian = 1061,
    msoLanguageIDFaeroese = 1080,
    msoLanguageIDFarsi = 1065,
    msoLanguageIDFinnish = 1035,
    msoLanguageIDBelgianFrench = 2060,
    msoLanguageIDFrenchCameroon = 11276,
    msoLanguageIDFrenchCanadian = 3084,
    msoLanguageIDFrenchCotedIvoire = 12300,
    msoLanguageIDFrench = 1036,
    msoLanguageIDFrenchLuxembourg = 5132,
    msoLanguageIDFrenchMali = 13324,
    msoLanguageIDFrenchMonaco = 6156,
    msoLanguageIDFrenchReunion = 8204,
    msoLanguageIDFrenchSenegal = 10252,
    msoLanguageIDSwissFrench = 4108,
    msoLanguageIDFrenchWestIndies = 7180,
    msoLanguageIDFrenchZaire = 9228,
    msoLanguageIDFrisianNetherlands = 1122,
    msoLanguageIDGaelicIreland = 2108,
    msoLanguageIDGaelicScotland = 1084,
    msoLanguageIDGalician = 1110,
    msoLanguageIDGeorgian = 1079,
    msoLanguageIDGermanAustria = 3079,
    msoLanguageIDGerman = 1031,
    msoLanguageIDGermanLiechtenstein = 5127,
    msoLanguageIDGermanLuxembourg = 4103,
    msoLanguageIDSwissGerman = 2055,
    msoLanguageIDGreek = 1032,
    msoLanguageIDGujarati = 1095,
    msoLanguageIDHebrew = 1037,
    msoLanguageIDHindi = 1081,
    msoLanguageIDHungarian = 1038,
    msoLanguageIDIcelandic = 1039,
    msoLanguageIDIndonesian = 1057,
    msoLanguageIDItalian = 1040,
    msoLanguageIDSwissItalian = 2064,
    msoLanguageIDJapanese = 1041,
    msoLanguageIDKannada = 1099,
    msoLanguageIDKashmiri = 1120,
    msoLanguageIDKazakh = 1087,
    msoLanguageIDKhmer = 1107,
    msoLanguageIDKirghiz = 1088,
    msoLanguageIDKonkani = 1111,
    msoLanguageIDKorean = 1042,
    msoLanguageIDLao = 1108,
    msoLanguageIDLatvian = 1062,
    msoLanguageIDLithuanian = 1063,
    msoLanguageIDMacedonian = 1071,
    msoLanguageIDMalaysian = 1086,
    msoLanguageIDMalayBruneiDarussalam = 2110,
    msoLanguageIDMalayalam = 1100,
    msoLanguageIDMaltese = 1082,
    msoLanguageIDManipuri = 1112,
    msoLanguageIDMarathi = 1102,
    msoLanguageIDMongolian = 1104,
    msoLanguageIDNepali = 1121,
    msoLanguageIDNorwegianBokmol = 1044,
    msoLanguageIDNorwegianNynorsk = 2068,
    msoLanguageIDOriya = 1096,
    msoLanguageIDPolish = 1045,
    msoLanguageIDBrazilianPortuguese = 1046,
    msoLanguageIDPortuguese = 2070,
    msoLanguageIDPunjabi = 1094,
    msoLanguageIDRhaetoRomanic = 1047,
    msoLanguageIDRomanianMoldova = 2072,
    msoLanguageIDRomanian = 1048,
    msoLanguageIDRussianMoldova = 2073,
    msoLanguageIDRussian = 1049,
    msoLanguageIDSamiLappish = 1083,
    msoLanguageIDSanskrit = 1103,
    msoLanguageIDSerbianCyrillic = 3098,
    msoLanguageIDSerbianLatin = 2074,
    msoLanguageIDSesotho = 1072,
    msoLanguageIDSindhi = 1113,
    msoLanguageIDSlovak = 1051,
    msoLanguageIDSlovenian = 1060,
    msoLanguageIDSorbian = 1070,
    msoLanguageIDSpanishArgentina = 11274,
    msoLanguageIDSpanishBolivia = 16394,
    msoLanguageIDSpanishChile = 13322,
    msoLanguageIDSpanishColombia = 9226,
    msoLanguageIDSpanishCostaRica = 5130,
    msoLanguageIDSpanishDominicanRepublic = 7178,
    msoLanguageIDSpanishEcuador = 12298,
    msoLanguageIDSpanishElSalvador = 17418,
    msoLanguageIDSpanishGuatemala = 4106,
    msoLanguageIDSpanishHonduras = 18442,
    msoLanguageIDMexicanSpanish = 2058,
    msoLanguageIDSpanishNicaragua = 19466,
    msoLanguageIDSpanishPanama = 6154,
    msoLanguageIDSpanishParaguay = 15370,
    msoLanguageIDSpanishPeru = 10250,
    msoLanguageIDSpanishPuertoRico = 20490,
    msoLanguageIDSpanishModernSort = 3082,
    msoLanguageIDSpanish = 1034,
    msoLanguageIDSpanishUruguay = 14346,
    msoLanguageIDSpanishVenezuela = 8202,
    msoLanguageIDSutu = 1072,
    msoLanguageIDSwahili = 1089,
    msoLanguageIDSwedishFinland = 2077,
    msoLanguageIDSwedish = 1053,
    msoLanguageIDTajik = 1064,
    msoLanguageIDTamil = 1097,
    msoLanguageIDTatar = 1092,
    msoLanguageIDTelugu = 1098,
    msoLanguageIDThai = 1054,
    msoLanguageIDTibetan = 1105,
    msoLanguageIDTsonga = 1073,
    msoLanguageIDTswana = 1074,
    msoLanguageIDTurkish = 1055,
    msoLanguageIDTurkmen = 1090,
    msoLanguageIDUkrainian = 1058,
    msoLanguageIDUrdu = 1056,
    msoLanguageIDUzbekCyrillic = 2115,
    msoLanguageIDUzbekLatin = 1091,
    msoLanguageIDVenda = 1075,
    msoLanguageIDVietnamese = 1066,
    msoLanguageIDWelsh = 1106,
    msoLanguageIDXhosa = 1076,
    msoLanguageIDZulu = 1077
}MsoLanguageID;
enum
{
    xlHairline = 1,
    xlThin = 2,
    xlMedium = -4138,
    xlThick = 4
}XlBorderWeight;
enum
{
    xlColorIndexAutomatic = -4105,
    xlColorIndexNone = -4142
}XlColorIndex;
enum
{
    xlNext = 1,
    xlPrevious = 2
}XlSearchDirection;
enum
{
    xlAscending = 1,
    xlDescending = 2
}XlSortOrder;
enum
{
    xlGuess = 0,
    xlYes = 1,
    xlNo = 2
}XlYesNoGuess;
enum
{
    xlA1 = 1,
    xlR1C1 = -4150
}XlReferenceStyle;
enum
{
    ssExportActionNone = 0,
    ssExportActionOpenInExcel = 1
}SheetExportActionEnum;
enum
{
    ssExportAsAppropriate = 0,
    ssExportXMLSpreadsheet = 1,
    ssExportHTML = 2
}SheetExportFormat;
enum
{
    ssFilterFunctionInclude = 1,
    ssFilterFunctionExclude = 2
}SheetFilterFunction;
enum
{
    xlWorkbook = 1
}XlWindowType;
enum
{
    xlWorksheet = -4167
}XlSheetType;
enum
{
    xlSheetVisible = -1,
    xlSheetHidden = 0,
    xlSheetVeryHidden = 2
}XlSheetVisibility;
enum
{
    xlCalculationAutomatic = -4105,
    xlCalculationManual = -4135
}XlCalculation;
enum
{
    xlDown = -4121,
    xlToLeft = -4159,
    xlToRight = -4161,
    xlUp = -4162
}XlDirection;
enum
{
    xlUnderlineStyleNone = -4142,
    xlUnderlineStyleSingle = 2,
    xlUnderlineStyleDouble = -4119,
    xlUnderlineStyleSingleAccounting = 4,
    xlUnderlineStyleDoubleAccounting = 5
}XlUnderlineStyle;
enum
{
    xlEdgeLeft = 7,
    xlEdgeTop = 8,
    xlEdgeBottom = 9,
    xlEdgeRight = 10,
    xlInsideVertical = 11,
    xlInsideHorizontal = 12
}XlBordersIndex;
enum
{
    xlLineStyleNone = -4142,
    xlContinuous = 1,
    xlDash = -4115,
    xlDot = -4118,
    xlDashDot = 4,
    xlDashDotDot = 5
}XlLineStyle;
enum
{
    xlHAlignGeneral = 1,
    xlHAlignLeft = -4131,
    xlHAlignCenter = -4108,
    xlHAlignRight = -4152,
    xlHAlignFill = 5
}XlHAlign;
enum
{
    xlContext = -5002,
    xlLTR = -5003,
    xlRTL = -5004
}XlReadingOrder;
enum
{
    xlVAlignBottom = -4107,
    xlVAlignCenter = -4108,
    xlVAlignTop = -4160
}XlVAlign;
enum
{
    eTipTypeNone = -1,
    eTipTypeText = 0,
    eTipTypeHTML = 1,
    eTipTypeAuto = 2
}TipTypeEnum;
enum
{
    owcLineStyleNone = 0,
    owcLineStyleAutomatic = 1,
    owcLineStyleSolid = 2,
    owcLineStyleDash = 3,
    owcLineStyleDot = 4,
    owcLineStyleDashDot = 5,
    owcLineStyleDashDotDot = 6
}LineStyleEnum;
enum
{
    ecBitmapPlusMinus = 0,
    ecBitmapUpDownArrow = 1,
    ecBitmapOpenCloseFolder = 2
}ExpandBitmapTypeEnum;
enum
{
    dscParameter = -1,
    dscOutput = 1,
    dscCalculated = 2,
    dscGrouping = 3
}DscFieldTypeEnum;
enum
{
    dscNone = 0,
    dscSum = 1,
    dscAvg = 2,
    dscMin = 3,
    dscMax = 4,
    dscCount = 5,
    dscAny = 6,
    dscStdev = 7
}DscTotalTypeEnum;
enum
{
    dscEachValue = 0,
    dscPrefix = 1,
    dscYear = 2,
    dscQuarter = 3,
    dscMonth = 4,
    dscWeek = 5,
    dscDay = 6,
    dscHour = 7,
    dscMinute = 8,
    dscInterval = 9
}DscGroupOnEnum;
enum
{
    dscInnerJoin = 1,
    dscLeftOuterJoin = 2,
    dscRightOuterJoin = 3
}DscJoinTypeEnum;
enum
{
    dscSublist = 1,
    dscLookup = 2
}DscPageRelTypeEnum;
enum
{
    dscobjUnknown = -1,
    dscobjSchemaRowsource = 1,
    dscobjSchemaField = 2,
    dscobjSchemaRelationship = 4,
    dscobjRecordsetDef = 8,
    dscobjPageRowsource = 16,
    dscobjPageField = 32,
    dscobjSublistRelationship = 64,
    dscobjLookupRelationship = 128,
    dscobjGroupingDef = 256,
    dscobjDatamodel = 512,
    dscobjPageRelatedField = 1024,
    dscobjParameterValue = 2048,
    dscobjSchemaRelatedField = 4096,
    dscobjSchemaParameter = 8192,
    dscobjSchemaProperty = 16384,
    dscobjSchemaDiagram = 32768
}DscObjectTypeEnum;
enum
{
    navbtnMoveFirst = 0,
    navbtnMovePrev = 1,
    navbtnMoveNext = 2,
    navbtnMoveLast = 3,
    navbtnNew = 4,
    navbtnDelete = 5,
    navbtnSave = 6,
    navbtnUndo = 7,
    navbtnSortAscending = 8,
    navbtnSortDescending = 9,
    navbtnApplyFilter = 10,
    navbtnToggleFilter = 11,
    navbtnHelp = 12
}NavButtonEnum;
enum
{
    dscDefault = 0,
    dscGrid = 1,
    dscFields = 2
}DscDropTypeEnum;
enum
{
    dscAbove = 1,
    dscWithin = 2,
    dscBelow = 3
}DscDropLocationEnum;
enum
{
    dschlDisplayedValue = 0,
    dschlDisplayText = 1,
    dschlAddress = 2,
    dschlSubAddress = 3,
    dschlScreenTip = 4,
    dschlFullAddress = 5
}DscHyperlinkPartEnum;
enum
{
    dscSystem = -1,
    dscClient = 0,
    dscServer = 1
}DscLocationEnum;
enum
{
    dscSnapshot = 1,
    dscUpdatableSnapshot = 2
}DscRecordsetTypeEnum;
enum
{
    dscTable = 1,
    dscView = 2,
    dscCommandText = 3,
    dscProcedure = 4,
    dscCommandFile = 5
}DscRowsourceTypeEnum;
enum
{
    dscFull = 1,
    dscParameterized = 2,
    dscSelectControl = 32768
}DscFetchTypeEnum;
enum
{
    dscAdd = 1,
    dscDelete = 2,
    dscMove = 3,
    dscLoad = 4,
    dscChange = 5,
    dscDeleteComplete = 6,
    dscRename = 7
}DscAdviseTypeEnum;
enum
{
    ocCommandAbout = 1007,
    ocCommandUndo = 1000,
    ocCommandCut = 1001,
    ocCommandCopy = 1002,
    ocCommandPaste = 1003,
    ocCommandProperties = 1005,
    ocCommandHelp = 1006,
    ocCommandExport = 1004,
    ocCommandSortAsc = 2000,
    ocCommandSortDesc = 2031,
    ocCommandChooser = 1010,
    ocCommandAutoFilter = 1017,
    ocCommandAutoCalc = 1016,
    ocCommandCollapse = 1013,
    ocCommandExpand = 1012,
    ocCommandRefresh = 1014
}OCCommandId;
enum
{
    xl24HourClock = 33,
    xl4DigitYears = 43,
    xlAlternateArraySeparator = 16,
    xlColumnSeparator = 14,
    xlCountryCode = 1,
    xlCountrySetting = 2,
    xlCurrencyBefore = 37,
    xlCurrencyCode = 25,
    xlCurrencyDigits = 27,
    xlCurrencyLeadingZeros = 40,
    xlCurrencyMinusSign = 38,
    xlCurrencyNegative = 28,
    xlCurrencySpaceBefore = 36,
    xlCurrencyTrailingZeros = 39,
    xlDateOrder = 32,
    xlDateSeparator = 17,
    xlDayCode = 21,
    xlDayLeadingZero = 42,
    xlDecimalSeparator = 3,
    xlGeneralFormatName = 26,
    xlHourCode = 22,
    xlLeftBrace = 12,
    xlLeftBracket = 10,
    xlListSeparator = 5,
    xlLowerCaseColumnLetter = 9,
    xlLowerCaseRowLetter = 8,
    xlMDY = 44,
    xlMetric = 35,
    xlMinuteCode = 23,
    xlMonthCode = 20,
    xlMonthLeadingZero = 41,
    xlMonthNameChars = 30,
    xlNoncurrencyDigits = 29,
    xlNonEnglishFunctions = 34,
    xlRightBrace = 13,
    xlRightBracket = 11,
    xlRowSeparator = 15,
    xlSecondCode = 24,
    xlThousandsSeparator = 4,
    xlTimeLeadingZero = 45,
    xlTimeSeparator = 18,
    xlUpperCaseColumnLetter = 7,
    xlUpperCaseRowLetter = 6,
    xlWeekdayNameChars = 31,
    xlYearCode = 19
}XlApplicationInternational;
enum
{
    flrelNoRel = 0,
    flrelOneToMany = 1,
    flrelManyToOne = 2,
    flrelOneToOnePrimaryPrimary = 4,
    flrelOneToOnePrimaryForeign = 8,
    flrelUniqueConstraint = 16,
    flrelUniqueIndex = 32
}FieldListRelationshipTypeEnum;
enum
{
    flTables = 1,
    flViews = 2,
    flStoredProcedures = 4,
    flCmdText = 8,
    flSchemaDiagrams = 16,
    flOLAPCube = 32,
    flAll = 63
}FieldListObjectTypeEnum;
enum
{
    daLength = 1,
    daPrecision = 2,
    daScale = 3
}DaAttrEnum;
enum
{
    sectTypeNone = 0,
    sectTypeCaption = 1,
    sectTypeHeader = 2,
    sectTypeFooter = 3,
    sectTypeRecNav = 4
}SectTypeEnum;
enum
{
    dscDeleteOK = 0,
    dscDeleteCancel = 1,
    dscDeleteUserCancel = 2
}DscStatusEnum;
enum
{
    dscDataAlertContinue = 0,
    dscDataAlertDisplay = 1
}DscDisplayAlert;
enum
{
    ctlTypeTextBox = 0,
    ctlTypeBoundSpan = 1,
    ctlTypeBoundHTML = 1
}DefaultControlTypeEnum;
enum
{
    designFlagDontDelete = 1,
    designFlagDontCleanup = 2
}DataPageDesignerFlags;
enum
{
    exportNone = 0,
    exportForExcel = 1
}ExportableConnectStringEnum;
enum
{
    dscOfflineNone = 0,
    dscOfflineMerge = 1,
    dscOfflineXMLDataFile = 2
}DscOfflineTypeEnum;
enum
{
    dscXMLEmbedded = 0,
    dscXMLDataFile = 1
}DscXMLLocationEnum;
enum
{
    dscSaveAsEmbeddedXML = 0,
    dscSaveAsXMLDataFile = 1
}DscSaveAsEnum;
enum
{
    dscUTF8 = 0,
    dscUTF16 = 1
}DscEncodingEnum;
enum
{
    dscConnectionReset = 0,
    dscDataReset = 1
}NotificationType;
enum
{
    dscRefreshConnection = 0,
    dscRefreshData = 1
}RefreshType;
enum
{
    dscSynchronizing = 0,
    dscSynchronizationDone = 1
}SynchronizationStatus;
enum
{
    flSRNone = 0,
    flSRParent = 1,
    flSRParentAndType = 2
}FieldListSelectRestriction;
enum
{
    chNone = -1,
    chSolid = 0
}ChartFillStyleEnum;
enum
{
    chColorAutomatic = -1,
    chColorNone = -2
}ChartColorIndexEnum;
enum
{
    chDataGroupingFunctionMinimum = 0,
    chDataGroupingFunctionMaximum = 1,
    chDataGroupingFunctionSum = 2,
    chDataGroupingFunctionAverage = 3
}ChartDataGroupingFunctionEnum;
enum
{
    chSeriesByRows = 0,
    chSeriesByColumns = 1
}ChartSeriesByEnum;
enum
{
    chDataBound = 0,
    chDataLiteral = -1,
    chDataNone = -2,
    chDataLinked = -3
}ChartSpecialDataSourcesEnum;
enum
{
    chPivotColumns = -1,
    chPivotRows = -2,
    chPivotColAggregates = -3,
    chPivotRowAggregates = -4
}ChartPivotDataReferenceEnum;
enum
{
    chSurfaceBackWall = 0,
    chSurfaceSideWall = 1,
    chSurfaceFloor = 2
}Chart3DSurfaceEnum;
enum
{
    chLabelOrientationAutomatic = 1000,
    chLabelOrientationHorizontal = 0,
    chLabelOrientationUpward = 90,
    chLabelOrientationDownward = -90
}ChartLabelOrientationEnum;
enum
{
    chCommandCut = 1001,
    chCommandDeleteSelection = 1011,
    chCommandShowPropertyToolbox = 1005,
    chCommandShowContextMenu = 6001,
    chCommandUndo = 1000,
    chCommandSelectPrevMinor = 6002,
    chCommandSelectNextMinor = 6003,
    chCommandSelectPrevMajor = 6004,
    chCommandSelectNextMajor = 6005,
    chCommandShowHelp = 1006,
    chCommandShowAbout = 1007,
    chCommandPassiveAlert = 6026,
    chCommandLaunchDataFinder = 6027,
    chCommandShowLegend = 6028,
    chCommandRefresh = 1014,
    chCommandByRowCol = 6032,
    chCommandSortAscending = 2000,
    chCommandSortDescending = 2031,
    chCommandAutoFilter = 1017,
    chCommandAutoCalc = 1016,
    chCommandExpand = 1012,
    chCommandCollapse = 1013,
    chCommandDrill = 6034,
    chCommandFieldList = 1010,
    chCommandFilterByMenu = 1015,
    chCommandSortAscendingByTotal = 6035,
    chCommandSortDescendingByTotal = 6036,
    chCommandDrillOut = 6037,
    chCommandTogglePropertiesInScreenTip = 6038,
    chCommandChartType = 6039,
    chCommandShowWizard = 6040,
    chCommandSum = 6041,
    chCommandCount = 6042,
    chCommandMin = 6043,
    chCommandMax = 6044,
    chCommandAverage = 6045,
    chCommandStdDev = 6046,
    chCommandVar = 6047,
    chCommandStdDevP = 6048,
    chCommandVarP = 6049,
    chCommandFontName = 1050,
    chCommandFontSize = 1051,
    chCommandBold = 1052,
    chCommandItalic = 1053,
    chCommandUnderline = 1054,
    chCommandLineColor = 1055,
    chCommandInteriorColor = 1056,
    chCommandFontColor = 1057,
    chCommandMultiChart = 6050,
    chCommandUnifiedScales = 6051,
    chCommandShowDropZones = 6052,
    chCommandShowToolbar = 6053,
    chCommandShowTop1 = 1100,
    chCommandShowTop2 = 1101,
    chCommandShowTop5 = 1102,
    chCommandShowTop10 = 1103,
    chCommandShowTop25 = 1104,
    chCommandShowTop1Percent = 1105,
    chCommandShowTop2Percent = 1106,
    chCommandShowTop5Percent = 1107,
    chCommandShowTop10Percent = 1108,
    chCommandShowTop25Percent = 1109,
    chCommandShowBottom1 = 1110,
    chCommandShowBottom2 = 1111,
    chCommandShowBottom5 = 1112,
    chCommandShowBottom10 = 1113,
    chCommandShowBottom25 = 1114,
    chCommandShowBottom1Percent = 1115,
    chCommandShowBottom2Percent = 1116,
    chCommandShowBottom5Percent = 1117,
    chCommandShowBottom10Percent = 1118,
    chCommandShowBottom25Percent = 1119,
    chCommandShowOther = 1120,
    chCommandShowAll = 1121,
    chCommandShowTopNMenu = 1123,
    chCommandShowBottomNMenu = 1124,
    chCommandConditionalFilter = 1125,
    chCommandMoveToFilterArea = 6054,
    chCommandMoveToSeriesArea = 6055,
    chCommandMoveToCategoryArea = 6056,
    chCommandMoveToChartArea = 6057
}ChartCommandIdEnum;
enum
{
    ssCoerceNum = 1,
    ssCoerceStr = 2,
    ssCoerceBool = 4,
    ssCoerceErr = 16,
    ssCoerceMulti = 64,
    ssCoerceInt = 2048
}AddinClientTypeEnum;
enum
{
    ssCommandUndo = 1000,
    ssCommandCut = 1001,
    ssCommandCopy = 1002,
    ssCommandPaste = 1003,
    ssCommandExport = 1004,
    ssCommandProperties = 1005,
    ssCommandHelp = 1006,
    ssCommandAbout = 1007,
    ssCommandSortAsc = 2000,
    ssCommandSortAscLast = 2030,
    ssCommandSortDesc = 2031,
    ssCommandSortDescLast = 2061,
    ssCommandAutosum = 10000,
    ssCommandAutoFilter = 10001,
    ssCommandClear = 10002,
    ssCommandBold = 1052,
    ssCommandItalic = 1053,
    ssCommandUnderline = 1054,
    ssCommandDeleteRows = 10006,
    ssCommandDeleteCols = 10007,
    ssCommandInsertRows = 10008,
    ssCommandInsertCols = 10009,
    ssCommandRecalcForce = 10010,
    ssCommandSelectRow = 10011,
    ssCommandSelectCol = 10012,
    ssCommandSelectAll = 10013,
    ssCommandMoveLeft = 10014,
    ssCommandMoveUp = 10015,
    ssCommandMoveRight = 10016,
    ssCommandMoveDown = 10017,
    ssCommandScrollLeft = 10018,
    ssCommandScrollUp = 10019,
    ssCommandScrollRight = 10020,
    ssCommandScrollDown = 10021,
    ssCommandMoveNext = 10022,
    ssCommandMovePrevious = 10023,
    ssCommandTabNext = 10024,
    ssCommandTabPrevious = 10025,
    ssCommandMoveToEndLeft = 10026,
    ssCommandMoveToEndUp = 10027,
    ssCommandMoveToEndRight = 10028,
    ssCommandMoveToEndDown = 10029,
    ssCommandExpandLeft = 10030,
    ssCommandExpandUp = 10031,
    ssCommandExpandRight = 10032,
    ssCommandExpandDown = 10033,
    ssCommandExpandToEndLeft = 10034,
    ssCommandExpandToEndUp = 10035,
    ssCommandExpandToEndRight = 10036,
    ssCommandExpandToEndDown = 10037,
    ssCommandEnterEditMode = 10038,
    ssCommandShowContextMenu = 10039,
    ssCommandToggleToolbar = 10040,
    ssCommandEscape = 10041,
    ssCommandMoveToLast = 10042,
    ssCommandExpandToLast = 10043,
    ssCommandMoveToLastInRow = 10044,
    ssCommandMovePageDown = 10045,
    ssCommandExpandPageDown = 10046,
    ssCommandMovePageUp = 10047,
    ssCommandExpandPageUp = 10048,
    ssCommandMovePageRight = 10062,
    ssCommandExpandPageRight = 10063,
    ssCommandMovePageLeft = 10064,
    ssCommandExpandPageLeft = 10065,
    ssCommandMoveToOrigin = 10049,
    ssCommandExpandToOrigin = 10050,
    ssCommandMoveToHome = 10051,
    ssCommandExpandToHome = 10052,
    ssCommandExpandMenu = 10053,
    ssCommandEat = 10054,
    ssCommandNextSheet = 10055,
    ssCommandPrevSheet = 10056,
    ssCommandNewSheet = 10057,
    ssCommandSelectArray = 10058,
    ssCommandSelectArraySilent = 10067,
    ssCommandRecalc = 10059,
    ssCommandRefresh = 10060,
    ssCommandRefreshAll = 10061,
    ssCommandMakeActiveCellVisible = 10066
}SpreadSheetCommandId;
enum
{
    ssCalculate = 0,
    ssInsertRows = 2,
    ssInsertColumns = 3,
    ssDeleteRows = 4,
    ssDeleteColumns = 5,
    ssCut = 6,
    ssCopy = 7,
    ssPaste = 8,
    ssExport = 9,
    ssUndo = 10,
    ssSortAscending = 11,
    ssSortDescending = 12,
    ssFind = 13,
    ssClear = 14,
    ssAutoFilter = 15,
    ssProperties = 16,
    ssHelp = 17
}SheetCommandEnum;
enum
{
    xlAutomatic = -4105,
    xlNone = -4142
}XlConstants;
enum
{
    xlShiftToLeft = -4159,
    xlShiftUp = -4162
}XlDeleteShiftDirection;
enum
{
    xlShiftDown = -4121,
    xlShiftToRight = -4161
}XlInsertShiftDirection;
enum
{
    xlFormulas = -4123,
    xlValues = -4163
}XlFindLookIn;
enum
{
    xlPart = 2,
    xlWhole = 1
}XlLookAt;
enum
{
    xlDownward = -4170,
    xlHorizontal = -4128,
    xlUpward = -4171,
    xlVertical = -4166
}XlOrientation;
enum
{
    xlByColumns = 2,
    xlByRows = 1
}XlSearchOrder;
enum
{
    xlRangeValueDefault = 10,
    xlRangeValueXMLSpreadsheet = 11,
    xlRangeValueHTML = 1000,
    xlRangeValueCSV = 1001
}XlRangeValueType;
enum
{
    plViewReasonSelectionChange = 0,
    plViewReasonSystemColorChange = 1,
    plViewReasonDataChange = 2,
    plViewReasonFontNameChange = 3,
    plViewReasonFontSizeChange = 4,
    plViewReasonFontBoldChange = 5,
    plViewReasonFontItalicChange = 6,
    plViewReasonFontUnderlineChange = 7,
    plViewReasonMemberExpandedChange = 8,
    plViewReasonCellExpandedChange = 9,
    plViewReasonDetailRowHeightChange = 10,
    plViewReasonFieldDetailWidthChange = 11,
    plViewReasonFieldGroupedWidthChange = 12,
    plViewReasonViewDetailWidthChange = 13,
    plViewReasonFieldSetWidthChange = 14,
    plViewReasonTotalWidthChange = 15,
    plViewReasonForeColorChange = 16,
    plViewReasonBackColorChange = 17,
    plViewReasonAlignmentChange = 18,
    plViewReasonNumberFormatChange = 19,
    plViewReasonDetailTopChange = 20,
    plViewReasonDetailLeftChange = 21,
    plViewReasonTopChange = 22,
    plViewReasonLeftChange = 23,
    plViewReasonRightToLeftChange = 24,
    plViewReasonTotalOrientationChange = 25,
    plViewReasonDisplayOutlineChange = 26,
    plViewReasonFieldCaptionChange = 27,
    plViewReasonFieldSetCaptionChange = 28,
    plViewReasonLabelCaptionChange = 29,
    plViewReasonMemberCaptionChange = 30,
    plViewReasonTotalCaptionChange = 31,
    plViewReasonAllowFilteringChange = 32,
    plViewReasonAllowGroupingChange = 33,
    plViewReasonWidthChange = 34,
    plViewReasonHeightChange = 35,
    plViewReasonLabelVisibleChange = 36,
    plViewReasonDisplayToolbarChange = 37,
    plViewReasonMaxHeightChange = 38,
    plViewReasonMaxWidthChange = 39,
    plViewReasonAutoFitChange = 40,
    plViewReasonFieldExpandedChange = 41,
    plViewReasonExpandDetailsChange = 42,
    plViewReasonDetailMaxWidthChange = 43,
    plViewReasonDetailMaxHeightChange = 44,
    plViewReasonTopOffsetChange = 45,
    plViewReasonLeftOffsetChange = 46,
    plViewReasonDetailTopOffsetChange = 47,
    plViewReasonDetailLeftOffsetChange = 48,
    plViewReasonIsHyperlinkChange = 49,
    plViewReasonMemberPropertyDisplayInChange = 50,
    plViewReasonMemberPropertyCaptionChange = 51,
    plViewReasonMemberPropertiesOrderChange = 52,
    plViewReasonFieldGroupedHeightChange = 53,
    plViewReasonMemberHeightChange = 54,
    plViewReasonMemberWidthChange = 55,
    plViewReasonPropertyValueWidthChange = 56,
    plViewReasonPropertyHeightChange = 57,
    plViewReasonShowDetails = 58,
    plViewReasonHideDetails = 59,
    plViewReasonAllowCustomOrderingChange = 60,
    plViewReasonAllowPropertyToolbox = 61,
    plViewReasonExpandMembersChange = 62,
    plViewReasonAllowEditsChange = 63,
    plViewReasonAllowAdditionsChange = 64,
    plViewReasonAllowDeletionsChange = 65,
    plViewReasonSetFocus = 66,
    plViewReasonKillFocus = 67,
    plViewReasonDisplayScreenTipsChange = 68,
    plViewReasonShowAsChange = 69,
    plViewReasonMemberCaptionsChange = 70,
    plViewReasonPropertyCaptionWidthChange = 71,
    plViewReasonDataMemberCaptionChange = 72,
    plViewReasonDisplayInFieldListChange = 73,
    plViewReasonToolbarChange = 74,
    plViewReasonUseProviderFormattingChange = 75
}PivotViewReasonEnum;
enum
{
    plDataReasonInsertFieldSet = 0,
    plDataReasonRemoveFieldSet = 1,
    plDataReasonInsertTotal = 2,
    plDataReasonRemoveTotal = 3,
    plDataReasonAllowDetailsChange = 4,
    plDataReasonSortDirectionChange = 5,
    plDataReasonSortOnChange = 6,
    plDataReasonSortOnScopeChange = 7,
    plDataReasonFilterFunctionChange = 8,
    plDataReasonFilterContextChange = 9,
    plDataReasonDisplayCalculatedMembersChange = 10,
    plDataReasonFilterOnChange = 11,
    plDataReasonFilterOnScopeChange = 12,
    plDataReasonFilterFunctionValueChange = 13,
    plDataReasonTotalNameChange = 14,
    plDataReasonIncludedMembersChange = 15,
    plDataReasonExcludedMembersChange = 16,
    plDataReasonIsIncludedChange = 17,
    plDataReasonDisplayEmptyMembersChange = 19,
    plDataReasonTotalFunctionChange = 20,
    plDataReasonUser = 21,
    plDataReasonDataSourceChange = 22,
    plDataReasonDataMemberChange = 23,
    plDataReasonGroupOnChange = 24,
    plDataReasonUnknown = 25,
    plDataReasonGroupStartChange = 26,
    plDataReasonGroupIntervalChange = 27,
    plDataReasonIsFilteredChange = 28,
    plDataReasonOrderedMembersChange = 29,
    plDataReasonGroupEndChange = 30,
    plDataReasonCommandTextChange = 31,
    plDataReasonConnectionStringChange = 32,
    plDataReasonMemberPropertyIsIncludedChange = 33,
    plDataReasonMemberPropertyDisplayInChange = 34,
    plDataReasonSubtotalsChange = 35,
    plDataReasonTotalExpressionChange = 36,
    plDataReasonTotalSolveOrderChange = 37,
    plDataReasonTotalDeleted = 38,
    plDataReasonFieldSetDeleted = 39,
    plDataReasonRecordChanged = 40,
    plDataReasonAllowMultiFilterChange = 41,
    plDataReasonAllIncludeExcludeChange = 42,
    plDataReasonAdhocFieldAdded = 43,
    plDataReasonAdhocFieldDeleted = 44,
    plDataReasonAdhocMemberChanged = 45,
    plDataReasonAlwaysIncludeInCubeChange = 46,
    plDataReasonExpressionChange = 47,
    plDataReasonTotalAllMembersChange = 48,
    plDataReasonDisplayCellColorChange = 49,
    plDataReasonFilterCrossJoinsChange = 50,
    plDataReasonRefreshDataSource = 51,
    plDataReasonFieldSetNameChange = 52,
    plDataReasonFieldNameChange = 53
}PivotDataReasonEnum;
enum
{
    plPivotTableReasonTotalAdded = 0,
    plPivotTableReasonTotalDeleted = 1,
    plPivotTableReasonFieldSetAdded = 2,
    plPivotTableReasonFieldAdded = 3
}PivotTableReasonEnum;
enum
{
    plCommandAbout = 1007,
    plCommandDelete = 1011,
    plCommandFilterBySel = 12001,
    plCommandChooser = 1010,
    plCommandProperties = 1005,
    plCommandInsertField = 12004,
    plCommandAutoSum = 12005,
    plCommandAutoCount = 12006,
    plCommandAutoMin = 12007,
    plCommandAutoMax = 12008,
    plCommandDropzones = 12009,
    plCommandRemove = 12010,
    plCommandNextHorz = 12012,
    plCommandNextVert = 12013,
    plCommandLeftEdge = 12014,
    plCommandRightEdge = 12015,
    plCommandTopLeftEdge = 12016,
    plCommandBottomRightEdge = 12017,
    plCommandNextHorzCell = 12018,
    plCommandPrevHorzCell = 12019,
    plCommandLastLeft = 12020,
    plCommandLastRight = 12021,
    plCommandLastUp = 12022,
    plCommandLastDown = 12023,
    plCommandEnterDetails = 12024,
    plCommandExitDetails = 12025,
    plCommandLeft = 12026,
    plCommandRight = 12027,
    plCommandUp = 12028,
    plCommandDown = 12029,
    plCommandPageUp = 12030,
    plCommandPageDown = 12031,
    plCommandPageLeft = 12032,
    plCommandPageRight = 12033,
    plCommandGroupByRow = 12034,
    plCommandGroupByColumn = 12035,
    plCommandUngroup = 12036,
    plCommandFilter = 12037,
    plCommandPromote = 12038,
    plCommandDemote = 12039,
    plCommandExpand = 1012,
    plCommandCollapse = 1013,
    plCommandSubtotal = 12042,
    plCommandExport = 1004,
    plCommandToolbar = 12044,
    plCommandSortAsc = 2000,
    plCommandSortDesc = 2031,
    plCommandClearCustomOrdering = 12154,
    plCommandHelp = 1006,
    plCommandRefresh = 1014,
    plCommandAutoFilter = 1017,
    plCommandCopy = 1002,
    plCommandExpandIndicator = 12051,
    plCommandSelectField = 12052,
    plCommandSelectRow = 12053,
    plCommandSelectAll = 12054,
    plCommandFormatGeneral = 12055,
    plCommandFormatCurrency = 12056,
    plCommandFormatPercent = 12057,
    plCommandFormatExponent = 12058,
    plCommandFormatDate = 12059,
    plCommandFormatTime = 12060,
    plCommandFormatComma = 12061,
    plCommandFormatBold = 12062,
    plCommandFormatItalic = 12063,
    plCommandFormatUnderline = 12064,
    plCommandFormatUnderline2 = 12146,
    plCommandFilterByMenu = 12065,
    plCommandContextMenu = 12066,
    plCommandPrevHorz = 12067,
    plCommandPrevVert = 12068,
    plCommandNextVertCell = 12069,
    plCommandPrevVertCell = 12070,
    plCommandExtendLeft = 12072,
    plCommandExtendRight = 12073,
    plCommandExtendUp = 12074,
    plCommandExtendDown = 12075,
    plCommandExtendPageLeft = 12076,
    plCommandExtendPageRight = 12077,
    plCommandExtendPageUp = 12078,
    plCommandExtendPageDown = 12079,
    plCommandHyperlink = 12082,
    plCommandOpenHyperlinkInPlace = 12083,
    plCommandOpenHyperlinkInWindow = 12084,
    plCommandMoveMemUp = 12085,
    plCommandMoveMemDown = 12086,
    plCommandMoveMemLeft = 12087,
    plCommandMoveMemRight = 12088,
    plCommandAutoAverage = 12089,
    plCommandAutoStdDev = 12090,
    plCommandAutoVar = 12091,
    plCommandAutoStdDevP = 12092,
    plCommandAutoVarP = 12093,
    plCommandShowDetails = 12095,
    plCommandHideDetails = 12096,
    plCommandTogglePropertiesInReport = 12097,
    plCommandTogglePropertiesInScreenTip = 12098,
    plCommandStartEdit = 12099,
    plCommandEndEdit = 12100,
    plCommandDeleteRow = 12101,
    plCommandCreateCalculatedTotal = 12102,
    plCommandPaste = 1003,
    plCommandExtendTopLeftEdge = 12107,
    plCommandExtendBottomRightEdge = 12108,
    plCommandTogglePropertyInReport = 12900,
    plCommandTogglePropertyInScreenTip = 12950,
    plCommandAutoCalc = 1016,
    plCommandCalculated = 12110,
    plCommandShowTop1 = 1100,
    plCommandShowTop2 = 1101,
    plCommandShowTop5 = 1102,
    plCommandShowTop10 = 1103,
    plCommandShowTop25 = 1104,
    plCommandShowTop1Percent = 1105,
    plCommandShowTop2Percent = 1106,
    plCommandShowTop5Percent = 1107,
    plCommandShowTop10Percent = 1108,
    plCommandShowTop25Percent = 1109,
    plCommandShowBottom1 = 1110,
    plCommandShowBottom2 = 1111,
    plCommandShowBottom5 = 1112,
    plCommandShowBottom10 = 1113,
    plCommandShowBottom25 = 1114,
    plCommandShowBottom1Percent = 1115,
    plCommandShowBottom2Percent = 1116,
    plCommandShowBottom5Percent = 1117,
    plCommandShowBottom10Percent = 1118,
    plCommandShowBottom25Percent = 1119,
    plCommandShowOther = 1120,
    plCommandShowAll = 1121,
    plCommandShowTopNMenu = 1123,
    plCommandShowBottomNMenu = 1124,
    plCommandConditionalFilter = 1125,
    plCommandShowAs = 12134,
    plCommandShowAsNormal = 12135,
    plCommandShowAsPercentOfRowTotal = 12136,
    plCommandShowAsPercentOfColumnTotal = 12137,
    plCommandShowAsPercentOfRowParent = 12138,
    plCommandShowAsPercentOfColumnParent = 12139,
    plCommandShowAsPercentOfGrandTotal = 12140,
    plCommandFormatAlignLeft = 12141,
    plCommandFormatAlignCenter = 12142,
    plCommandFormatAlignRight = 12143,
    plCommandFormatAlignAutomatic = 12158,
    plCommandFormatName = 12144,
    plCommandFormatSize = 12145,
    plCommandFormatForeColor = 12147,
    plCommandFormatBackColor = 12148,
    plCommandShowAllPropertiesInReport = 12149,
    plCommandHideAllPropertiesInReport = 12150,
    plCommandShowAllPropertiesInScreenTip = 12151,
    plCommandHideAllPropertiesInScreenTip = 12152,
    plCommandProfile = 12153,
    plCommandGroupMembers = 12155,
    plCommandUngroupMembers = 12156,
    plCommandCut = 12157
}PivotCommandId;


// Operations
public:

// ISpreadsheet

// Functions
//

void AddIn(LPDISPATCH AddIn)
{
	static BYTE parms[] = VTS_DISPATCH ;
	InvokeHelper(0x6ae, DISPATCH_METHOD, VT_EMPTY, NULL, parms, AddIn);
}
void BeginUndo()
{
	InvokeHelper(0x6af, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
void Calculate()
{
	InvokeHelper(0x6b0, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
void CalculateFull()
{
	InvokeHelper(0x6b1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
void EndUndo(BOOL Cancel)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x6b2, DISPATCH_METHOD, VT_EMPTY, NULL, parms, Cancel);
}
VARIANT _Evaluate(VARIANT Expression)
{
	VARIANT result;
	static BYTE parms[] = VTS_VARIANT ;
	InvokeHelper(0xfffffffb, DISPATCH_METHOD, VT_VARIANT, (void*)&result, parms, &Expression);
	return result;
}
VARIANT Evaluate(VARIANT Expression)
{
	VARIANT result;
	static BYTE parms[] = VTS_VARIANT ;
	InvokeHelper(0x6b3, DISPATCH_METHOD, VT_VARIANT, (void*)&result, parms, &Expression);
	return result;
}
void Export(LPCTSTR Filename, long Action, long Format)
{
	static BYTE parms[] = VTS_BSTR VTS_I4 VTS_I4 ;
	InvokeHelper(0x6b4, DISPATCH_METHOD, VT_EMPTY, NULL, parms, Filename, Action, Format);
}
void LocateDataSource()
{
	InvokeHelper(0x6b5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
LPUNKNOWN msDataSourceObject(LPCTSTR bstr)
{
	LPUNKNOWN result;
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0xfffff0c4, DISPATCH_METHOD, VT_UNKNOWN, (void*)&result, parms, bstr);
	return result;
}
LPDISPATCH RectIntersect(LPDISPATCH Range1, LPDISPATCH Range2)
{
	LPDISPATCH result;
	static BYTE parms[] = VTS_DISPATCH VTS_DISPATCH ;
	InvokeHelper(0x6b6, DISPATCH_METHOD, VT_DISPATCH, (void*)&result, parms, Range1, Range2);
	return result;
}
LPDISPATCH RectUnion(LPDISPATCH Range1, LPDISPATCH Range2)
{
	LPDISPATCH result;
	static BYTE parms[] = VTS_DISPATCH VTS_DISPATCH ;
	InvokeHelper(0x6b7, DISPATCH_METHOD, VT_DISPATCH, (void*)&result, parms, Range1, Range2);
	return result;
}
void Refresh()
{
	InvokeHelper(0x6b8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
void Repaint()
{
	InvokeHelper(0x6b9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
void ShowAbout()
{
	InvokeHelper(0x6ba, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
void ShowContextMenu(long x, long y, VARIANT Menu)
{
	static BYTE parms[] = VTS_I4 VTS_I4 VTS_VARIANT ;
	InvokeHelper(0x6bb, DISPATCH_METHOD, VT_EMPTY, NULL, parms, x, y, &Menu);
}
void ShowHelp(long Topic)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x6bc, DISPATCH_METHOD, VT_EMPTY, NULL, parms, Topic);
}
void Undo()
{
	InvokeHelper(0x6bd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
void UpdatePropertyToolbox()
{
	InvokeHelper(0x6be, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
LPDISPATCH get_ActiveCell()
{
	LPDISPATCH result;
	InvokeHelper(0x44d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_ActiveSheet()
{
	LPDISPATCH result;
	InvokeHelper(0x44e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_ActiveWindow()
{
	LPDISPATCH result;
	InvokeHelper(0x44f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_ActiveWorkbook()
{
	LPDISPATCH result;
	InvokeHelper(0x450, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
BOOL get_AllowPropertyToolbox()
{
	BOOL result;
	InvokeHelper(0x3f0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_AllowPropertyToolbox(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x3f0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
LPDISPATCH get_Application()
{
	LPDISPATCH result;
	InvokeHelper(0x451, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
BOOL get_AutoFit()
{
	BOOL result;
	InvokeHelper(0x3f1, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_AutoFit(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x3f1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_Build()
{
	long result;
	InvokeHelper(0x452, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
CString get_BuildNumber()
{
	CString result;
	InvokeHelper(0x453, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
long get_Calculation()
{
	long result;
	InvokeHelper(0x401, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_Calculation(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x401, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_CalculationVersion()
{
	long result;
	InvokeHelper(0x454, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
BOOL get_CanUndo()
{
	BOOL result;
	InvokeHelper(0x455, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
CString get_Caption()
{
	CString result;
	InvokeHelper(0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_Caption(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
LPDISPATCH get_Cells()
{
	LPDISPATCH result;
	InvokeHelper(0x456, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_Columns()
{
	LPDISPATCH result;
	InvokeHelper(0x457, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_Commands()
{
	LPDISPATCH result;
	InvokeHelper(0x458, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_Constants()
{
	LPDISPATCH result;
	InvokeHelper(0x459, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
CString get_CSVData()
{
	CString result;
	InvokeHelper(0x3ea, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_CSVData(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x3ea, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
CString get_CSVURL()
{
	CString result;
	InvokeHelper(0x3eb, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_CSVURL(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x3eb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
CString get_DataMember()
{
	CString result;
	InvokeHelper(0x45a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_DataMember(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x45a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
LPUNKNOWN get_DataSource()
{
	LPUNKNOWN result;
	InvokeHelper(0x45b, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&result, NULL);
	return result;
}
void put_DataSource(LPUNKNOWN newValue)
{
	static BYTE parms[] = VTS_UNKNOWN ;
	InvokeHelper(0x45b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
void putref_DataSource(LPUNKNOWN newValue)
{
	static BYTE parms[] = VTS_UNKNOWN ;
	InvokeHelper(0x45b, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, parms, newValue);
}
CString get_DataType()
{
	CString result;
	InvokeHelper(0x3e9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_DataType(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x3e9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DesignMode()
{
	BOOL result;
	InvokeHelper(0x45c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
BOOL get_Dirty()
{
	BOOL result;
	InvokeHelper(0x45d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_Dirty(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x45d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayBranding()
{
	BOOL result;
	InvokeHelper(0x45e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayBranding(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x45e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayColumnHeadings()
{
	BOOL result;
	InvokeHelper(0x3f5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayColumnHeadings(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x3f5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayDesignTimeUI()
{
	BOOL result;
	InvokeHelper(0x45f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayDesignTimeUI(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x45f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayGridlines()
{
	BOOL result;
	InvokeHelper(0x3f7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayGridlines(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x3f7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayHorizontalScrollBar()
{
	BOOL result;
	InvokeHelper(0x3f9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayHorizontalScrollBar(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x3f9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayOfficeLogo()
{
	BOOL result;
	InvokeHelper(0x3fa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayOfficeLogo(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x3fa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayPropertyToolbox()
{
	BOOL result;
	InvokeHelper(0xfa2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayPropertyToolbox(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0xfa2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayRowHeadings()
{
	BOOL result;
	InvokeHelper(0x3fb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayRowHeadings(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x3fb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayTitleBar()
{
	BOOL result;
	InvokeHelper(0x3fe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayTitleBar(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x3fe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayToolbar()
{
	BOOL result;
	InvokeHelper(0x3ff, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayToolbar(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x3ff, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayVerticalScrollBar()
{
	BOOL result;
	InvokeHelper(0x3fd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayVerticalScrollBar(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x3fd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayWorkbookTabs()
{
	BOOL result;
	InvokeHelper(0x400, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayWorkbookTabs(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x400, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_EnableEvents()
{
	BOOL result;
	InvokeHelper(0x402, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_EnableEvents(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x402, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_EnableUndo()
{
	BOOL result;
	InvokeHelper(0x405, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_EnableUndo(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x405, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
CString get_HTMLData()
{
	CString result;
	InvokeHelper(0x3ec, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_HTMLData(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x3ec, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
CString get_HTMLURL()
{
	CString result;
	InvokeHelper(0x3ed, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_HTMLURL(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x3ed, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
unsigned long get_InstanceID()
{
	unsigned long result;
	InvokeHelper(0x409, DISPATCH_PROPERTYGET, VT_UI4, (void*)&result, NULL);
	return result;
}
VARIANT get_International(VARIANT Index)
{
	VARIANT result;
	static BYTE parms[] = VTS_VARIANT ;
	InvokeHelper(0x460, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&result, parms, &Index);
	return result;
}
LPDISPATCH get_LanguageSettings()
{
	LPDISPATCH result;
	InvokeHelper(0x461, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
VARIANT get_MaxHeight()
{
	VARIANT result;
	InvokeHelper(0x40c, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&result, NULL);
	return result;
}
void put_MaxHeight(VARIANT newValue)
{
	static BYTE parms[] = VTS_VARIANT ;
	InvokeHelper(0x40c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, &newValue);
}
VARIANT get_MaxWidth()
{
	VARIANT result;
	InvokeHelper(0x40e, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&result, NULL);
	return result;
}
void put_MaxWidth(VARIANT newValue)
{
	static BYTE parms[] = VTS_VARIANT ;
	InvokeHelper(0x40e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, &newValue);
}
long get_MajorVersion()
{
	long result;
	InvokeHelper(0x462, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
CString get_MinorVersion()
{
	CString result;
	InvokeHelper(0x463, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
BOOL get_MoveAfterReturn()
{
	BOOL result;
	InvokeHelper(0x40f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_MoveAfterReturn(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x40f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_MoveAfterReturnDirection()
{
	long result;
	InvokeHelper(0x410, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_MoveAfterReturnDirection(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x410, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
CString get_Name()
{
	CString result;
	InvokeHelper(0x464, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_Names()
{
	LPDISPATCH result;
	InvokeHelper(0x465, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_Range(VARIANT Cell1, VARIANT Cell2)
{
	LPDISPATCH result;
	static BYTE parms[] = VTS_VARIANT VTS_VARIANT ;
	InvokeHelper(0x466, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, parms, &Cell1, &Cell2);
	return result;
}
CString get_RevisionNumber()
{
	CString result;
	InvokeHelper(0x467, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
BOOL get_RightToLeft()
{
	BOOL result;
	InvokeHelper(0x412, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_RightToLeft(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x412, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
LPDISPATCH get_Rows()
{
	LPDISPATCH result;
	InvokeHelper(0x468, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
BOOL get_ScreenUpdating()
{
	BOOL result;
	InvokeHelper(0x414, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_ScreenUpdating(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x414, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
LPDISPATCH get_Selection()
{
	LPDISPATCH result;
	InvokeHelper(0x415, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_Sheets()
{
	LPDISPATCH result;
	InvokeHelper(0x469, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_TitleBar()
{
	LPDISPATCH result;
	InvokeHelper(0x46a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_Toolbar()
{
	LPDISPATCH result;
	InvokeHelper(0x46b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
CString get_Value()
{
	CString result;
	InvokeHelper(0x46c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
CString get_Version()
{
	CString result;
	InvokeHelper(0x46d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
CString get_ViewableRange()
{
	CString result;
	InvokeHelper(0x418, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_ViewableRange(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x418, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_ViewOnlyMode()
{
	BOOL result;
	InvokeHelper(0x46e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_Windows()
{
	LPDISPATCH result;
	InvokeHelper(0x46f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_Workbooks()
{
	LPDISPATCH result;
	InvokeHelper(0x470, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_Worksheets()
{
	LPDISPATCH result;
	InvokeHelper(0x471, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
CString get_XMLData()
{
	CString result;
	InvokeHelper(0x3ee, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_XMLData(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x3ee, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
CString get_XMLURL()
{
	CString result;
	InvokeHelper(0x3ef, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_XMLURL(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x3ef, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}

// Properties
//



};
