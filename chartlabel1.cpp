// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "chartlabel1.h"

// Dispatch interfaces referenced by this interface
#include "Border1.h"
#include "Interior1.h"
#include "StrokeFont.h"
#include "Coord1.h"
#include "DataCoord1.h"
#include "DataIndex1.h"
#include "font.h"
#include "label1.h"


/////////////////////////////////////////////////////////////////////////////
// CChartLabel1 properties

LPDISPATCH CChartLabel1::GetParent()
{
	LPDISPATCH result;
	GetProperty(0x1, VT_DISPATCH, (void*)&result);
	return result;
}

CString CChartLabel1::GetName()
{
	CString result;
	GetProperty(0x2, VT_BSTR, (void*)&result);
	return result;
}

void CChartLabel1::SetName(LPCTSTR propVal)
{
	SetProperty(0x2, VT_BSTR, propVal);
}

BOOL CChartLabel1::GetIsShowing()
{
	BOOL result;
	GetProperty(0x3, VT_BOOL, (void*)&result);
	return result;
}

void CChartLabel1::SetIsShowing(BOOL propVal)
{
	SetProperty(0x3, VT_BOOL, propVal);
}

BOOL CChartLabel1::GetIsBatched()
{
	BOOL result;
	GetProperty(0x4, VT_BOOL, (void*)&result);
	return result;
}

void CChartLabel1::SetIsBatched(BOOL propVal)
{
	SetProperty(0x4, VT_BOOL, propVal);
}

BOOL CChartLabel1::GetIsConnected()
{
	BOOL result;
	GetProperty(0x5, VT_BOOL, (void*)&result);
	return result;
}

void CChartLabel1::SetIsConnected(BOOL propVal)
{
	SetProperty(0x5, VT_BOOL, propVal);
}

long CChartLabel1::GetAttachMethod()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CChartLabel1::SetAttachMethod(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

long CChartLabel1::GetAdjust()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CChartLabel1::SetAdjust(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

long CChartLabel1::GetPlane()
{
	long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CChartLabel1::SetPlane(long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

long CChartLabel1::GetHorizontalOffset()
{
	long result;
	GetProperty(0x9, VT_I4, (void*)&result);
	return result;
}

void CChartLabel1::SetHorizontalOffset(long propVal)
{
	SetProperty(0x9, VT_I4, propVal);
}

long CChartLabel1::GetVerticalOffset()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CChartLabel1::SetVerticalOffset(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

CBorder1 CChartLabel1::GetBorder()
{
	LPDISPATCH pDispatch;
	GetProperty(0xb, VT_DISPATCH, (void*)&pDispatch);
	return CBorder1(pDispatch);
}

CInterior1 CChartLabel1::GetInterior()
{
	LPDISPATCH pDispatch;
	GetProperty(0xc, VT_DISPATCH, (void*)&pDispatch);
	return CInterior1(pDispatch);
}

CStrokeFont CChartLabel1::GetStrokeFont()
{
	LPDISPATCH pDispatch;
	GetProperty(0xd, VT_DISPATCH, (void*)&pDispatch);
	return CStrokeFont(pDispatch);
}

CCoord1 CChartLabel1::GetAttachCoord()
{
	LPDISPATCH pDispatch;
	GetProperty(0xe, VT_DISPATCH, (void*)&pDispatch);
	return CCoord1(pDispatch);
}

CDataCoord1 CChartLabel1::GetAttachDataCoord()
{
	LPDISPATCH pDispatch;
	GetProperty(0xf, VT_DISPATCH, (void*)&pDispatch);
	return CDataCoord1(pDispatch);
}

CDataIndex1 CChartLabel1::GetAttachDataIndex()
{
	LPDISPATCH pDispatch;
	GetProperty(0x10, VT_DISPATCH, (void*)&pDispatch);
	return CDataIndex1(pDispatch);
}

COleFont CChartLabel1::GetFont()
{
	LPDISPATCH pDispatch;
	GetProperty(0x11, VT_DISPATCH, (void*)&pDispatch);
	return COleFont(pDispatch);
}

void CChartLabel1::SetFont(LPDISPATCH propVal)
{
	SetProperty(0x11, VT_DISPATCH, propVal);
}

CLabel1 CChartLabel1::GetText()
{
	LPDISPATCH pDispatch;
	GetProperty(0x12, VT_DISPATCH, (void*)&pDispatch);
	return CLabel1(pDispatch);
}

/////////////////////////////////////////////////////////////////////////////
// CChartLabel1 operations
