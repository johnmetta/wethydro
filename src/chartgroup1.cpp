// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "chartgroup1.h"

// Dispatch interfaces referenced by this interface
#include "Elevation.h"
#include "Contour.h"
#include "Chart3DData.h"
#include "LabelCollection1.h"
#include "Chart3DDataCoordResult.h"
#include "Chart3DCoordResult.h"
#include "Chart3DDataIndexResult.h"


/////////////////////////////////////////////////////////////////////////////
// CChartGroup1 properties

LPDISPATCH CChartGroup1::GetParent()
{
	LPDISPATCH result;
	GetProperty(0x1, VT_DISPATCH, (void*)&result);
	return result;
}

long CChartGroup1::GetChartType()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CChartGroup1::SetChartType(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

CElevation CChartGroup1::GetElevation()
{
	LPDISPATCH pDispatch;
	GetProperty(0x3, VT_DISPATCH, (void*)&pDispatch);
	return CElevation(pDispatch);
}

CContour CChartGroup1::GetContour()
{
	LPDISPATCH pDispatch;
	GetProperty(0x4, VT_DISPATCH, (void*)&pDispatch);
	return CContour(pDispatch);
}

CChart3DData CChartGroup1::GetElevationData()
{
	LPDISPATCH pDispatch;
	GetProperty(0x5, VT_DISPATCH, (void*)&pDispatch);
	return CChart3DData(pDispatch);
}

void CChartGroup1::SetElevationData(LPDISPATCH propVal)
{
	SetProperty(0x5, VT_DISPATCH, propVal);
}

CChart3DData CChartGroup1::GetContourData()
{
	LPDISPATCH pDispatch;
	GetProperty(0x6, VT_DISPATCH, (void*)&pDispatch);
	return CChart3DData(pDispatch);
}

void CChartGroup1::SetContourData(LPDISPATCH propVal)
{
	SetProperty(0x6, VT_DISPATCH, propVal);
}

CLabelCollection1 CChartGroup1::GetColumnLabels()
{
	LPDISPATCH pDispatch;
	GetProperty(0x7, VT_DISPATCH, (void*)&pDispatch);
	return CLabelCollection1(pDispatch);
}

CLabelCollection1 CChartGroup1::GetRowLabels()
{
	LPDISPATCH pDispatch;
	GetProperty(0x8, VT_DISPATCH, (void*)&pDispatch);
	return CLabelCollection1(pDispatch);
}

/////////////////////////////////////////////////////////////////////////////
// CChartGroup1 operations

long CChartGroup1::CoordToDataCoord(long XPixel, long YPixel, double* x, double* y, double* Z)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PR8 VTS_PR8 VTS_PR8;
	InvokeHelper(0x9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		XPixel, YPixel, x, y, Z);
	return result;
}

void CChartGroup1::DataCoordToCoord(double x, double y, double Z, long* XPixel, long* YPixel)
{
	static BYTE parms[] =
		VTS_R8 VTS_R8 VTS_R8 VTS_PI4 VTS_PI4;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 x, y, Z, XPixel, YPixel);
}

long CChartGroup1::CoordToDataIndex(long XPixel, long YPixel, long* Row, long* Column, long* Distance)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4 VTS_PI4 VTS_PI4;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		XPixel, YPixel, Row, Column, Distance);
	return result;
}

void CChartGroup1::DataIndexToCoord(long Row, long Column, long* XPixel, long* YPixel)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4 VTS_PI4;
	InvokeHelper(0xc, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Row, Column, XPixel, YPixel);
}

double CChartGroup1::DragZValue(long Row, long Column, long XPixel, long YPixel)
{
	double result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_R8, (void*)&result, parms,
		Row, Column, XPixel, YPixel);
	return result;
}

double CChartGroup1::SurfaceValue(double x, double y)
{
	double result;
	static BYTE parms[] =
		VTS_R8 VTS_R8;
	InvokeHelper(0xe, DISPATCH_METHOD, VT_R8, (void*)&result, parms,
		x, y);
	return result;
}

CChart3DDataCoordResult CChartGroup1::CoordToDataCoordObject(long XPixel, long YPixel)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		XPixel, YPixel);
	return CChart3DDataCoordResult(pDispatch);
}

CChart3DCoordResult CChartGroup1::DataCoordToCoordObject(double x, double y, double Z)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_R8 VTS_R8 VTS_R8;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		x, y, Z);
	return CChart3DCoordResult(pDispatch);
}

CChart3DDataIndexResult CChartGroup1::CoordToDataIndexObject(long XPixel, long YPixel)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		XPixel, YPixel);
	return CChart3DDataIndexResult(pDispatch);
}

CChart3DCoordResult CChartGroup1::DataIndexToCoordObject(long Row, long Column)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		Row, Column);
	return CChart3DCoordResult(pDispatch);
}
