// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "pie.h"

// Dispatch interfaces referenced by this interface
#include "Label.h"
#include "FillStyle.h"


/////////////////////////////////////////////////////////////////////////////
// CPie properties

long CPie::GetSortOrder()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CPie::SetSortOrder(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

long CPie::GetThresholdMethod()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CPie::SetThresholdMethod(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

long CPie::GetMinSlices()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CPie::SetMinSlices(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

CLabel CPie::GetOtherLabel()
{
	LPDISPATCH pDispatch;
	GetProperty(0x4, VT_DISPATCH, (void*)&pDispatch);
	return CLabel(pDispatch);
}

CFillStyle CPie::GetOtherStyle()
{
	LPDISPATCH pDispatch;
	GetProperty(0x5, VT_DISPATCH, (void*)&pDispatch);
	return CFillStyle(pDispatch);
}

double CPie::GetThresholdValue()
{
	double result;
	GetProperty(0x6, VT_R8, (void*)&result);
	return result;
}

void CPie::SetThresholdValue(double propVal)
{
	SetProperty(0x6, VT_R8, propVal);
}

LPDISPATCH CPie::GetParent()
{
	LPDISPATCH result;
	GetProperty(0x7, VT_DISPATCH, (void*)&result);
	return result;
}

/////////////////////////////////////////////////////////////////////////////
// CPie operations
